package SideCrossOrdModGrp_Sides

import "bufio"
import "regexp"

// Autogenerated at , do not edit



import Parties_PartyIDs "grgrbll/fix/Shared/Parties_PartyIDs"

import PreAllocGrp_Allocs "grgrbll/fix/Shared/PreAllocGrp_Allocs"


type sideCrossOrdModGrp_Sides_RegexValidator struct {
    Side *(regexp.Regexp)
    ClOrdID *(regexp.Regexp)
    SecondaryClOrdID *(regexp.Regexp)
    ClOrdLinkID *(regexp.Regexp)
    TradeOriginationDate *(regexp.Regexp)
    TradeDate *(regexp.Regexp)
    Account *(regexp.Regexp)
    AcctIDSource *(regexp.Regexp)
    AccountType *(regexp.Regexp)
    DayBookingInst *(regexp.Regexp)
    BookingUnit *(regexp.Regexp)
    PreallocMethod *(regexp.Regexp)
    AllocID *(regexp.Regexp)
    QtyType *(regexp.Regexp)
    OrderQty *(regexp.Regexp)
    CashOrderQty *(regexp.Regexp)
    OrderPercent *(regexp.Regexp)
    RoundingDirection *(regexp.Regexp)
    RoundingModulus *(regexp.Regexp)
    Commission *(regexp.Regexp)
    CommType *(regexp.Regexp)
    CommCurrency *(regexp.Regexp)
    FundRenewWaiv *(regexp.Regexp)
    OrderCapacity *(regexp.Regexp)
    OrderRestrictions *(regexp.Regexp)
    CustOrderCapacity *(regexp.Regexp)
    ForexReq *(regexp.Regexp)
    SettlCurrency *(regexp.Regexp)
    BookingType *(regexp.Regexp)
    Text *(regexp.Regexp)
    EncodedTextLen *(regexp.Regexp)
    EncodedText *(regexp.Regexp)
    PositionEffect *(regexp.Regexp)
    CoveredOrUncovered *(regexp.Regexp)
    CashMargin *(regexp.Regexp)
    ClearingFeeIndicator *(regexp.Regexp)
    SolicitedFlag *(regexp.Regexp)
    SideComplianceID *(regexp.Regexp)
    SideTimeInForce *(regexp.Regexp)
    PreTradeAnonymity *(regexp.Regexp)
    _controlBlock fixMessageControlBlock
}


var mySideCrossOrdModGrp_Sides_RegexValidator sideCrossOrdModGrp_Sides_RegexValidator

func init() {
    mySideCrossOrdModGrp_Sides_RegexValidator
    mySideCrossOrdModGrp_Sides_RegexValidator.Side = regexp.MustCompile(`[^|]`)
    mySideCrossOrdModGrp_Sides_RegexValidator.ClOrdID = regexp.MustCompile(`[^|]*`)
    mySideCrossOrdModGrp_Sides_RegexValidator.SecondaryClOrdID = regexp.MustCompile(`[^|]*`)
    mySideCrossOrdModGrp_Sides_RegexValidator.ClOrdLinkID = regexp.MustCompile(`[^|]*`)
    mySideCrossOrdModGrp_Sides_RegexValidator.TradeOriginationDate = regexp.MustCompile(`[0-9]{8}`)
    mySideCrossOrdModGrp_Sides_RegexValidator.TradeDate = regexp.MustCompile(`[0-9]{8}`)
    mySideCrossOrdModGrp_Sides_RegexValidator.Account = regexp.MustCompile(`[^|]*`)
    mySideCrossOrdModGrp_Sides_RegexValidator.AcctIDSource = regexp.MustCompile(`-?\d+`)
    mySideCrossOrdModGrp_Sides_RegexValidator.AccountType = regexp.MustCompile(`-?\d+`)
    mySideCrossOrdModGrp_Sides_RegexValidator.DayBookingInst = regexp.MustCompile(`[^|]`)
    mySideCrossOrdModGrp_Sides_RegexValidator.BookingUnit = regexp.MustCompile(`[^|]`)
    mySideCrossOrdModGrp_Sides_RegexValidator.PreallocMethod = regexp.MustCompile(`[^|]`)
    mySideCrossOrdModGrp_Sides_RegexValidator.AllocID = regexp.MustCompile(`[^|]*`)
    mySideCrossOrdModGrp_Sides_RegexValidator.QtyType = regexp.MustCompile(`-?\d+`)
    mySideCrossOrdModGrp_Sides_RegexValidator.OrderQty = regexp.MustCompile(`-?\d*(\.\d*)?`)
    mySideCrossOrdModGrp_Sides_RegexValidator.CashOrderQty = regexp.MustCompile(`-?\d*(\.\d*)?`)
    mySideCrossOrdModGrp_Sides_RegexValidator.OrderPercent = regexp.MustCompile(`-?\d*(\.\d*)?`)
    mySideCrossOrdModGrp_Sides_RegexValidator.RoundingDirection = regexp.MustCompile(`[^|]`)
    mySideCrossOrdModGrp_Sides_RegexValidator.RoundingModulus = regexp.MustCompile(`-?\d*(\.\d*)?`)
    mySideCrossOrdModGrp_Sides_RegexValidator.Commission = regexp.MustCompile(`-?\d*(\.\d*)?`)
    mySideCrossOrdModGrp_Sides_RegexValidator.CommType = regexp.MustCompile(`[^|]`)
    mySideCrossOrdModGrp_Sides_RegexValidator.CommCurrency = regexp.MustCompile(`[A-Z]{3}`)
    mySideCrossOrdModGrp_Sides_RegexValidator.FundRenewWaiv = regexp.MustCompile(`[^|]`)
    mySideCrossOrdModGrp_Sides_RegexValidator.OrderCapacity = regexp.MustCompile(`[^|]`)
    mySideCrossOrdModGrp_Sides_RegexValidator.OrderRestrictions = regexp.MustCompile(`[ ]?(\w[ ])+\w?`)
    mySideCrossOrdModGrp_Sides_RegexValidator.CustOrderCapacity = regexp.MustCompile(`-?\d+`)
    mySideCrossOrdModGrp_Sides_RegexValidator.ForexReq = regexp.MustCompile(`[YN]`)
    mySideCrossOrdModGrp_Sides_RegexValidator.SettlCurrency = regexp.MustCompile(`[A-Z]{3}`)
    mySideCrossOrdModGrp_Sides_RegexValidator.BookingType = regexp.MustCompile(`-?\d+`)
    mySideCrossOrdModGrp_Sides_RegexValidator.Text = regexp.MustCompile(`[^|]*`)
    mySideCrossOrdModGrp_Sides_RegexValidator.EncodedTextLen = regexp.MustCompile(`\d+`)
    mySideCrossOrdModGrp_Sides_RegexValidator.EncodedText = regexp.MustCompile(`.*`)
    mySideCrossOrdModGrp_Sides_RegexValidator.PositionEffect = regexp.MustCompile(`[^|]`)
    mySideCrossOrdModGrp_Sides_RegexValidator.CoveredOrUncovered = regexp.MustCompile(`-?\d+`)
    mySideCrossOrdModGrp_Sides_RegexValidator.CashMargin = regexp.MustCompile(`[^|]`)
    mySideCrossOrdModGrp_Sides_RegexValidator.ClearingFeeIndicator = regexp.MustCompile(`[^|]*`)
    mySideCrossOrdModGrp_Sides_RegexValidator.SolicitedFlag = regexp.MustCompile(`[YN]`)
    mySideCrossOrdModGrp_Sides_RegexValidator.SideComplianceID = regexp.MustCompile(`[^|]*`)
    mySideCrossOrdModGrp_Sides_RegexValidator.SideTimeInForce = regexp.MustCompile(`\d{4}(0[1-9]|1[012])(0[1-9]|[12]\d|3[01])-([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](.\d{3})?`)
    mySideCrossOrdModGrp_Sides_RegexValidator.PreTradeAnonymity = regexp.MustCompile(`[YN]`)
}



func (m *SideCrossOrdModGrp_Sides) HasRequiredFields() bool {
    valid := true
    
    

    
    
    valid = valid && m.Side.HasValue()
    
    
    
    valid = valid && m.ClOrdID.HasValue()
    
    
    
    for _, g := range(m.PartyIDs) {
        valid = valid && g.HasRequiredFields()
    }
    
    
    
    for _, g := range(m.Allocs) {
        valid = valid && g.HasRequiredFields()
    }
    
    
    
    
    
    return valid
}




