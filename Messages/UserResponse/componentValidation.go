package UserResponse

import "bufio"
import "regexp"

// Autogenerated at , do not edit



import HopGrp_Hops "grgrbll/fix/Shared/HopGrp_Hops"


type userResponse_RegexValidator struct {
    BeginString *(regexp.Regexp)
    BodyLength *(regexp.Regexp)
    MsgType *(regexp.Regexp)
    SenderCompID *(regexp.Regexp)
    TargetCompID *(regexp.Regexp)
    OnBehalfOfCompID *(regexp.Regexp)
    DeliverToCompID *(regexp.Regexp)
    SecureDataLen *(regexp.Regexp)
    SecureData *(regexp.Regexp)
    MsgSeqNum *(regexp.Regexp)
    SenderSubID *(regexp.Regexp)
    SenderLocationID *(regexp.Regexp)
    TargetSubID *(regexp.Regexp)
    TargetLocationID *(regexp.Regexp)
    OnBehalfOfSubID *(regexp.Regexp)
    OnBehalfOfLocationID *(regexp.Regexp)
    DeliverToSubID *(regexp.Regexp)
    DeliverToLocationID *(regexp.Regexp)
    PossDupFlag *(regexp.Regexp)
    PossResend *(regexp.Regexp)
    SendingTime *(regexp.Regexp)
    OrigSendingTime *(regexp.Regexp)
    XmlDataLen *(regexp.Regexp)
    XmlData *(regexp.Regexp)
    MessageEncoding *(regexp.Regexp)
    LastMsgSeqNumProcessed *(regexp.Regexp)
    ApplVerID *(regexp.Regexp)
    CstmApplVerID *(regexp.Regexp)
    UserRequestID *(regexp.Regexp)
    Username *(regexp.Regexp)
    UserStatus *(regexp.Regexp)
    UserStatusText *(regexp.Regexp)
    SignatureLength *(regexp.Regexp)
    Signature *(regexp.Regexp)
    CheckSum *(regexp.Regexp)
    _controlBlock fixMessageControlBlock
}


var myUserResponse_RegexValidator userResponse_RegexValidator

func init() {
    myUserResponse_RegexValidator
    myUserResponse_RegexValidator.BeginString = regexp.MustCompile(`[^|]*`)
    myUserResponse_RegexValidator.BodyLength = regexp.MustCompile(`\d+`)
    myUserResponse_RegexValidator.MsgType = regexp.MustCompile(`[^|]*`)
    myUserResponse_RegexValidator.SenderCompID = regexp.MustCompile(`[^|]*`)
    myUserResponse_RegexValidator.TargetCompID = regexp.MustCompile(`[^|]*`)
    myUserResponse_RegexValidator.OnBehalfOfCompID = regexp.MustCompile(`[^|]*`)
    myUserResponse_RegexValidator.DeliverToCompID = regexp.MustCompile(`[^|]*`)
    myUserResponse_RegexValidator.SecureDataLen = regexp.MustCompile(`\d+`)
    myUserResponse_RegexValidator.SecureData = regexp.MustCompile(`.*`)
    myUserResponse_RegexValidator.MsgSeqNum = regexp.MustCompile(`\d+`)
    myUserResponse_RegexValidator.SenderSubID = regexp.MustCompile(`[^|]*`)
    myUserResponse_RegexValidator.SenderLocationID = regexp.MustCompile(`[^|]*`)
    myUserResponse_RegexValidator.TargetSubID = regexp.MustCompile(`[^|]*`)
    myUserResponse_RegexValidator.TargetLocationID = regexp.MustCompile(`[^|]*`)
    myUserResponse_RegexValidator.OnBehalfOfSubID = regexp.MustCompile(`[^|]*`)
    myUserResponse_RegexValidator.OnBehalfOfLocationID = regexp.MustCompile(`[^|]*`)
    myUserResponse_RegexValidator.DeliverToSubID = regexp.MustCompile(`[^|]*`)
    myUserResponse_RegexValidator.DeliverToLocationID = regexp.MustCompile(`[^|]*`)
    myUserResponse_RegexValidator.PossDupFlag = regexp.MustCompile(`[YN]`)
    myUserResponse_RegexValidator.PossResend = regexp.MustCompile(`[YN]`)
    myUserResponse_RegexValidator.SendingTime = regexp.MustCompile(`\d{4}(0[1-9]|1[012])(0[1-9]|[12]\d|3[01])-([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](.\d{3})?`)
    myUserResponse_RegexValidator.OrigSendingTime = regexp.MustCompile(`\d{4}(0[1-9]|1[012])(0[1-9]|[12]\d|3[01])-([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](.\d{3})?`)
    myUserResponse_RegexValidator.XmlDataLen = regexp.MustCompile(`\d+`)
    myUserResponse_RegexValidator.XmlData = regexp.MustCompile(`.*`)
    myUserResponse_RegexValidator.MessageEncoding = regexp.MustCompile(`[^|]*`)
    myUserResponse_RegexValidator.LastMsgSeqNumProcessed = regexp.MustCompile(`\d+`)
    myUserResponse_RegexValidator.ApplVerID = regexp.MustCompile(`[^|]*`)
    myUserResponse_RegexValidator.CstmApplVerID = regexp.MustCompile(`[^|]*`)
    myUserResponse_RegexValidator.UserRequestID = regexp.MustCompile(`[^|]*`)
    myUserResponse_RegexValidator.Username = regexp.MustCompile(`[^|]*`)
    myUserResponse_RegexValidator.UserStatus = regexp.MustCompile(`-?\d+`)
    myUserResponse_RegexValidator.UserStatusText = regexp.MustCompile(`[^|]*`)
    myUserResponse_RegexValidator.SignatureLength = regexp.MustCompile(`\d+`)
    myUserResponse_RegexValidator.Signature = regexp.MustCompile(`.*`)
    myUserResponse_RegexValidator.CheckSum = regexp.MustCompile(`[^|]*`)
}



func (m *UserResponse) HasRequiredFields() bool {
    valid := true
    
    

    
    
    valid = valid && m.BeginString.HasValue()
    
    
    
    valid = valid && m.BodyLength.HasValue()
    
    
    
    valid = valid && m.MsgType.HasValue()
    
    
    
    valid = valid && m.SenderCompID.HasValue()
    
    
    
    valid = valid && m.TargetCompID.HasValue()
    
    
    
    valid = valid && m.MsgSeqNum.HasValue()
    
    
    
    valid = valid && m.SendingTime.HasValue()
    
    
    
    for _, g := range(m.Hops) {
        valid = valid && g.HasRequiredFields()
    }
    
    
    
    valid = valid && m.UserRequestID.HasValue()
    
    
    
    valid = valid && m.Username.HasValue()
    
    
    
    valid = valid && m.CheckSum.HasValue()
    
    
    
    
    
    return valid
}




