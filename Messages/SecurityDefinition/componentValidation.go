package SecurityDefinition

import "bufio"
import "regexp"

// Autogenerated at , do not edit



import HopGrp_Hops "grgrbll/fix/Shared/HopGrp_Hops"

import SecAltIDGrp_SecurityAltID "grgrbll/fix/Shared/SecAltIDGrp_SecurityAltID"

import EvntGrp_Events "grgrbll/fix/Shared/EvntGrp_Events"

import InstrumentParties_InstrumentParties "grgrbll/fix/Shared/InstrumentParties_InstrumentParties"

import AttrbGrp_InstrAttrib "grgrbll/fix/Shared/AttrbGrp_InstrAttrib"

import UndInstrmtGrp_Underlyings "grgrbll/fix/Shared/UndInstrmtGrp_Underlyings"

import InstrmtLegGrp_Legs "grgrbll/fix/Shared/InstrmtLegGrp_Legs"


type securityDefinition_RegexValidator struct {
    BeginString *(regexp.Regexp)
    BodyLength *(regexp.Regexp)
    MsgType *(regexp.Regexp)
    SenderCompID *(regexp.Regexp)
    TargetCompID *(regexp.Regexp)
    OnBehalfOfCompID *(regexp.Regexp)
    DeliverToCompID *(regexp.Regexp)
    SecureDataLen *(regexp.Regexp)
    SecureData *(regexp.Regexp)
    MsgSeqNum *(regexp.Regexp)
    SenderSubID *(regexp.Regexp)
    SenderLocationID *(regexp.Regexp)
    TargetSubID *(regexp.Regexp)
    TargetLocationID *(regexp.Regexp)
    OnBehalfOfSubID *(regexp.Regexp)
    OnBehalfOfLocationID *(regexp.Regexp)
    DeliverToSubID *(regexp.Regexp)
    DeliverToLocationID *(regexp.Regexp)
    PossDupFlag *(regexp.Regexp)
    PossResend *(regexp.Regexp)
    SendingTime *(regexp.Regexp)
    OrigSendingTime *(regexp.Regexp)
    XmlDataLen *(regexp.Regexp)
    XmlData *(regexp.Regexp)
    MessageEncoding *(regexp.Regexp)
    LastMsgSeqNumProcessed *(regexp.Regexp)
    ApplVerID *(regexp.Regexp)
    CstmApplVerID *(regexp.Regexp)
    SecurityReportID *(regexp.Regexp)
    ClearingBusinessDate *(regexp.Regexp)
    SecurityReqID *(regexp.Regexp)
    SecurityResponseID *(regexp.Regexp)
    SecurityResponseType *(regexp.Regexp)
    Symbol *(regexp.Regexp)
    SymbolSfx *(regexp.Regexp)
    SecurityID *(regexp.Regexp)
    SecurityIDSource *(regexp.Regexp)
    Product *(regexp.Regexp)
    CFICode *(regexp.Regexp)
    SecurityType *(regexp.Regexp)
    SecuritySubType *(regexp.Regexp)
    MaturityMonthYear *(regexp.Regexp)
    MaturityDate *(regexp.Regexp)
    CouponPaymentDate *(regexp.Regexp)
    IssueDate *(regexp.Regexp)
    RepoCollateralSecurityType *(regexp.Regexp)
    RepurchaseTerm *(regexp.Regexp)
    RepurchaseRate *(regexp.Regexp)
    Factor *(regexp.Regexp)
    CreditRating *(regexp.Regexp)
    InstrRegistry *(regexp.Regexp)
    CountryOfIssue *(regexp.Regexp)
    StateOrProvinceOfIssue *(regexp.Regexp)
    LocaleOfIssue *(regexp.Regexp)
    RedemptionDate *(regexp.Regexp)
    StrikePrice *(regexp.Regexp)
    StrikeCurrency *(regexp.Regexp)
    OptAttribute *(regexp.Regexp)
    ContractMultiplier *(regexp.Regexp)
    CouponRate *(regexp.Regexp)
    SecurityExchange *(regexp.Regexp)
    Issuer *(regexp.Regexp)
    EncodedIssuerLen *(regexp.Regexp)
    EncodedIssuer *(regexp.Regexp)
    SecurityDesc *(regexp.Regexp)
    EncodedSecurityDescLen *(regexp.Regexp)
    EncodedSecurityDesc *(regexp.Regexp)
    Pool *(regexp.Regexp)
    ContractSettlMonth *(regexp.Regexp)
    CPProgram *(regexp.Regexp)
    CPRegType *(regexp.Regexp)
    DatedDate *(regexp.Regexp)
    InterestAccrualDate *(regexp.Regexp)
    SecurityStatus *(regexp.Regexp)
    SettleOnOpenFlag *(regexp.Regexp)
    InstrmtAssignmentMethod *(regexp.Regexp)
    StrikeMultiplier *(regexp.Regexp)
    StrikeValue *(regexp.Regexp)
    MinPriceIncrement *(regexp.Regexp)
    PositionLimit *(regexp.Regexp)
    NTPositionLimit *(regexp.Regexp)
    UnitofMeasure *(regexp.Regexp)
    TimeUnit *(regexp.Regexp)
    MaturityTime *(regexp.Regexp)
    DeliveryForm *(regexp.Regexp)
    PctAtRisk *(regexp.Regexp)
    Currency *(regexp.Regexp)
    TradingSessionID *(regexp.Regexp)
    TradingSessionSubID *(regexp.Regexp)
    Text *(regexp.Regexp)
    EncodedTextLen *(regexp.Regexp)
    EncodedText *(regexp.Regexp)
    ExpirationCycle *(regexp.Regexp)
    RoundLot *(regexp.Regexp)
    MinTradeVol *(regexp.Regexp)
    SignatureLength *(regexp.Regexp)
    Signature *(regexp.Regexp)
    CheckSum *(regexp.Regexp)
    _controlBlock fixMessageControlBlock
}


var mySecurityDefinition_RegexValidator securityDefinition_RegexValidator

func init() {
    mySecurityDefinition_RegexValidator
    mySecurityDefinition_RegexValidator.BeginString = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.BodyLength = regexp.MustCompile(`\d+`)
    mySecurityDefinition_RegexValidator.MsgType = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.SenderCompID = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.TargetCompID = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.OnBehalfOfCompID = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.DeliverToCompID = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.SecureDataLen = regexp.MustCompile(`\d+`)
    mySecurityDefinition_RegexValidator.SecureData = regexp.MustCompile(`.*`)
    mySecurityDefinition_RegexValidator.MsgSeqNum = regexp.MustCompile(`\d+`)
    mySecurityDefinition_RegexValidator.SenderSubID = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.SenderLocationID = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.TargetSubID = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.TargetLocationID = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.OnBehalfOfSubID = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.OnBehalfOfLocationID = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.DeliverToSubID = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.DeliverToLocationID = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.PossDupFlag = regexp.MustCompile(`[YN]`)
    mySecurityDefinition_RegexValidator.PossResend = regexp.MustCompile(`[YN]`)
    mySecurityDefinition_RegexValidator.SendingTime = regexp.MustCompile(`\d{4}(0[1-9]|1[012])(0[1-9]|[12]\d|3[01])-([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](.\d{3})?`)
    mySecurityDefinition_RegexValidator.OrigSendingTime = regexp.MustCompile(`\d{4}(0[1-9]|1[012])(0[1-9]|[12]\d|3[01])-([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](.\d{3})?`)
    mySecurityDefinition_RegexValidator.XmlDataLen = regexp.MustCompile(`\d+`)
    mySecurityDefinition_RegexValidator.XmlData = regexp.MustCompile(`.*`)
    mySecurityDefinition_RegexValidator.MessageEncoding = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.LastMsgSeqNumProcessed = regexp.MustCompile(`\d+`)
    mySecurityDefinition_RegexValidator.ApplVerID = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.CstmApplVerID = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.SecurityReportID = regexp.MustCompile(`-?\d+`)
    mySecurityDefinition_RegexValidator.ClearingBusinessDate = regexp.MustCompile(`[0-9]{8}`)
    mySecurityDefinition_RegexValidator.SecurityReqID = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.SecurityResponseID = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.SecurityResponseType = regexp.MustCompile(`-?\d+`)
    mySecurityDefinition_RegexValidator.Symbol = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.SymbolSfx = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.SecurityID = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.SecurityIDSource = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.Product = regexp.MustCompile(`-?\d+`)
    mySecurityDefinition_RegexValidator.CFICode = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.SecurityType = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.SecuritySubType = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.MaturityMonthYear = regexp.MustCompile(`[0-9]{6}([0-9]{2}|w[0-9])?`)
    mySecurityDefinition_RegexValidator.MaturityDate = regexp.MustCompile(`[0-9]{8}`)
    mySecurityDefinition_RegexValidator.CouponPaymentDate = regexp.MustCompile(`[0-9]{8}`)
    mySecurityDefinition_RegexValidator.IssueDate = regexp.MustCompile(`[0-9]{8}`)
    mySecurityDefinition_RegexValidator.RepoCollateralSecurityType = regexp.MustCompile(`-?\d+`)
    mySecurityDefinition_RegexValidator.RepurchaseTerm = regexp.MustCompile(`-?\d+`)
    mySecurityDefinition_RegexValidator.RepurchaseRate = regexp.MustCompile(`-?\d*(\.\d*)?`)
    mySecurityDefinition_RegexValidator.Factor = regexp.MustCompile(`-?\d*(\.\d*)?`)
    mySecurityDefinition_RegexValidator.CreditRating = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.InstrRegistry = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.CountryOfIssue = regexp.MustCompile(`[A-Z]{2}`)
    mySecurityDefinition_RegexValidator.StateOrProvinceOfIssue = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.LocaleOfIssue = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.RedemptionDate = regexp.MustCompile(`[0-9]{8}`)
    mySecurityDefinition_RegexValidator.StrikePrice = regexp.MustCompile(``)
    mySecurityDefinition_RegexValidator.StrikeCurrency = regexp.MustCompile(`[A-Z]{3}`)
    mySecurityDefinition_RegexValidator.OptAttribute = regexp.MustCompile(`[^|]`)
    mySecurityDefinition_RegexValidator.ContractMultiplier = regexp.MustCompile(`-?\d*(\.\d*)?`)
    mySecurityDefinition_RegexValidator.CouponRate = regexp.MustCompile(`-?\d*(\.\d*)?`)
    mySecurityDefinition_RegexValidator.SecurityExchange = regexp.MustCompile(`[A-Z0-9]{4}`)
    mySecurityDefinition_RegexValidator.Issuer = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.EncodedIssuerLen = regexp.MustCompile(`\d+`)
    mySecurityDefinition_RegexValidator.EncodedIssuer = regexp.MustCompile(`.*`)
    mySecurityDefinition_RegexValidator.SecurityDesc = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.EncodedSecurityDescLen = regexp.MustCompile(`\d+`)
    mySecurityDefinition_RegexValidator.EncodedSecurityDesc = regexp.MustCompile(`.*`)
    mySecurityDefinition_RegexValidator.Pool = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.ContractSettlMonth = regexp.MustCompile(`[0-9]{6}([0-9]{2}|w[0-9])?`)
    mySecurityDefinition_RegexValidator.CPProgram = regexp.MustCompile(`-?\d+`)
    mySecurityDefinition_RegexValidator.CPRegType = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.DatedDate = regexp.MustCompile(`[0-9]{8}`)
    mySecurityDefinition_RegexValidator.InterestAccrualDate = regexp.MustCompile(`[0-9]{8}`)
    mySecurityDefinition_RegexValidator.SecurityStatus = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.SettleOnOpenFlag = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.InstrmtAssignmentMethod = regexp.MustCompile(`[^|]`)
    mySecurityDefinition_RegexValidator.StrikeMultiplier = regexp.MustCompile(`-?\d*(\.\d*)?`)
    mySecurityDefinition_RegexValidator.StrikeValue = regexp.MustCompile(`-?\d*(\.\d*)?`)
    mySecurityDefinition_RegexValidator.MinPriceIncrement = regexp.MustCompile(`-?\d*(\.\d*)?`)
    mySecurityDefinition_RegexValidator.PositionLimit = regexp.MustCompile(`-?\d+`)
    mySecurityDefinition_RegexValidator.NTPositionLimit = regexp.MustCompile(`-?\d+`)
    mySecurityDefinition_RegexValidator.UnitofMeasure = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.TimeUnit = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.MaturityTime = regexp.MustCompile(`\d{2}:\d{2}(:\d{2})?(Z|[\+-]\d{2}(:\d{2})?)`)
    mySecurityDefinition_RegexValidator.DeliveryForm = regexp.MustCompile(`-?\d+`)
    mySecurityDefinition_RegexValidator.PctAtRisk = regexp.MustCompile(`-?\d*(\.\d*)?`)
    mySecurityDefinition_RegexValidator.Currency = regexp.MustCompile(`[A-Z]{3}`)
    mySecurityDefinition_RegexValidator.TradingSessionID = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.TradingSessionSubID = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.Text = regexp.MustCompile(`[^|]*`)
    mySecurityDefinition_RegexValidator.EncodedTextLen = regexp.MustCompile(`\d+`)
    mySecurityDefinition_RegexValidator.EncodedText = regexp.MustCompile(`.*`)
    mySecurityDefinition_RegexValidator.ExpirationCycle = regexp.MustCompile(`-?\d+`)
    mySecurityDefinition_RegexValidator.RoundLot = regexp.MustCompile(`-?\d*(\.\d*)?`)
    mySecurityDefinition_RegexValidator.MinTradeVol = regexp.MustCompile(`-?\d*(\.\d*)?`)
    mySecurityDefinition_RegexValidator.SignatureLength = regexp.MustCompile(`\d+`)
    mySecurityDefinition_RegexValidator.Signature = regexp.MustCompile(`.*`)
    mySecurityDefinition_RegexValidator.CheckSum = regexp.MustCompile(`[^|]*`)
}



func (m *SecurityDefinition) HasRequiredFields() bool {
    valid := true
    
    

    
    
    valid = valid && m.BeginString.HasValue()
    
    
    
    valid = valid && m.BodyLength.HasValue()
    
    
    
    valid = valid && m.MsgType.HasValue()
    
    
    
    valid = valid && m.SenderCompID.HasValue()
    
    
    
    valid = valid && m.TargetCompID.HasValue()
    
    
    
    valid = valid && m.MsgSeqNum.HasValue()
    
    
    
    valid = valid && m.SendingTime.HasValue()
    
    
    
    for _, g := range(m.Hops) {
        valid = valid && g.HasRequiredFields()
    }
    
    
    
    for _, g := range(m.SecurityAltID) {
        valid = valid && g.HasRequiredFields()
    }
    
    
    
    for _, g := range(m.Events) {
        valid = valid && g.HasRequiredFields()
    }
    
    
    
    for _, g := range(m.InstrumentParties) {
        valid = valid && g.HasRequiredFields()
    }
    
    
    
    for _, g := range(m.InstrAttrib) {
        valid = valid && g.HasRequiredFields()
    }
    
    
    
    for _, g := range(m.Underlyings) {
        valid = valid && g.HasRequiredFields()
    }
    
    
    
    for _, g := range(m.Legs) {
        valid = valid && g.HasRequiredFields()
    }
    
    
    
    valid = valid && m.CheckSum.HasValue()
    
    
    
    
    
    return valid
}




