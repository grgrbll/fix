package TradeCaptureReport

import "bufio"
import "regexp"

// Autogenerated at , do not edit



import HopGrp_Hops "grgrbll/fix/Shared/HopGrp_Hops"

import SecAltIDGrp_SecurityAltID "grgrbll/fix/Shared/SecAltIDGrp_SecurityAltID"

import EvntGrp_Events "grgrbll/fix/Shared/EvntGrp_Events"

import InstrumentParties_InstrumentParties "grgrbll/fix/Shared/InstrumentParties_InstrumentParties"

import UndInstrmtGrp_Underlyings "grgrbll/fix/Shared/UndInstrmtGrp_Underlyings"

import PositionAmountData_PosAmt "grgrbll/fix/Shared/PositionAmountData_PosAmt"

import TrdInstrmtLegGrp_Legs "grgrbll/fix/Shared/TrdInstrmtLegGrp_Legs"

import TrdRegTimestamps_TrdRegTimestamps "grgrbll/fix/Shared/TrdRegTimestamps_TrdRegTimestamps"

import TrdCapRptSideGrp_Sides "grgrbll/fix/Shared/TrdCapRptSideGrp_Sides"

import RootParties_RootPartyIDs "grgrbll/fix/Shared/RootParties_RootPartyIDs"


type tradeCaptureReport_RegexValidator struct {
    BeginString *(regexp.Regexp)
    BodyLength *(regexp.Regexp)
    MsgType *(regexp.Regexp)
    SenderCompID *(regexp.Regexp)
    TargetCompID *(regexp.Regexp)
    OnBehalfOfCompID *(regexp.Regexp)
    DeliverToCompID *(regexp.Regexp)
    SecureDataLen *(regexp.Regexp)
    SecureData *(regexp.Regexp)
    MsgSeqNum *(regexp.Regexp)
    SenderSubID *(regexp.Regexp)
    SenderLocationID *(regexp.Regexp)
    TargetSubID *(regexp.Regexp)
    TargetLocationID *(regexp.Regexp)
    OnBehalfOfSubID *(regexp.Regexp)
    OnBehalfOfLocationID *(regexp.Regexp)
    DeliverToSubID *(regexp.Regexp)
    DeliverToLocationID *(regexp.Regexp)
    PossDupFlag *(regexp.Regexp)
    PossResend *(regexp.Regexp)
    SendingTime *(regexp.Regexp)
    OrigSendingTime *(regexp.Regexp)
    XmlDataLen *(regexp.Regexp)
    XmlData *(regexp.Regexp)
    MessageEncoding *(regexp.Regexp)
    LastMsgSeqNumProcessed *(regexp.Regexp)
    ApplVerID *(regexp.Regexp)
    CstmApplVerID *(regexp.Regexp)
    TradeReportID *(regexp.Regexp)
    TradeReportTransType *(regexp.Regexp)
    TradeReportType *(regexp.Regexp)
    TradeRequestID *(regexp.Regexp)
    TrdType *(regexp.Regexp)
    TrdSubType *(regexp.Regexp)
    SecondaryTrdType *(regexp.Regexp)
    TransferReason *(regexp.Regexp)
    ExecType *(regexp.Regexp)
    TotNumTradeReports *(regexp.Regexp)
    LastRptRequested *(regexp.Regexp)
    UnsolicitedIndicator *(regexp.Regexp)
    SubscriptionRequestType *(regexp.Regexp)
    TradeReportRefID *(regexp.Regexp)
    SecondaryTradeReportRefID *(regexp.Regexp)
    SecondaryTradeReportID *(regexp.Regexp)
    TradeLinkID *(regexp.Regexp)
    TrdMatchID *(regexp.Regexp)
    ExecID *(regexp.Regexp)
    OrdStatus *(regexp.Regexp)
    SecondaryExecID *(regexp.Regexp)
    ExecRestatementReason *(regexp.Regexp)
    PreviouslyReported *(regexp.Regexp)
    PriceType *(regexp.Regexp)
    Symbol *(regexp.Regexp)
    SymbolSfx *(regexp.Regexp)
    SecurityID *(regexp.Regexp)
    SecurityIDSource *(regexp.Regexp)
    Product *(regexp.Regexp)
    CFICode *(regexp.Regexp)
    SecurityType *(regexp.Regexp)
    SecuritySubType *(regexp.Regexp)
    MaturityMonthYear *(regexp.Regexp)
    MaturityDate *(regexp.Regexp)
    CouponPaymentDate *(regexp.Regexp)
    IssueDate *(regexp.Regexp)
    RepoCollateralSecurityType *(regexp.Regexp)
    RepurchaseTerm *(regexp.Regexp)
    RepurchaseRate *(regexp.Regexp)
    Factor *(regexp.Regexp)
    CreditRating *(regexp.Regexp)
    InstrRegistry *(regexp.Regexp)
    CountryOfIssue *(regexp.Regexp)
    StateOrProvinceOfIssue *(regexp.Regexp)
    LocaleOfIssue *(regexp.Regexp)
    RedemptionDate *(regexp.Regexp)
    StrikePrice *(regexp.Regexp)
    StrikeCurrency *(regexp.Regexp)
    OptAttribute *(regexp.Regexp)
    ContractMultiplier *(regexp.Regexp)
    CouponRate *(regexp.Regexp)
    SecurityExchange *(regexp.Regexp)
    Issuer *(regexp.Regexp)
    EncodedIssuerLen *(regexp.Regexp)
    EncodedIssuer *(regexp.Regexp)
    SecurityDesc *(regexp.Regexp)
    EncodedSecurityDescLen *(regexp.Regexp)
    EncodedSecurityDesc *(regexp.Regexp)
    Pool *(regexp.Regexp)
    ContractSettlMonth *(regexp.Regexp)
    CPProgram *(regexp.Regexp)
    CPRegType *(regexp.Regexp)
    DatedDate *(regexp.Regexp)
    InterestAccrualDate *(regexp.Regexp)
    SecurityStatus *(regexp.Regexp)
    SettleOnOpenFlag *(regexp.Regexp)
    InstrmtAssignmentMethod *(regexp.Regexp)
    StrikeMultiplier *(regexp.Regexp)
    StrikeValue *(regexp.Regexp)
    MinPriceIncrement *(regexp.Regexp)
    PositionLimit *(regexp.Regexp)
    NTPositionLimit *(regexp.Regexp)
    UnitofMeasure *(regexp.Regexp)
    TimeUnit *(regexp.Regexp)
    MaturityTime *(regexp.Regexp)
    AgreementDesc *(regexp.Regexp)
    AgreementID *(regexp.Regexp)
    AgreementDate *(regexp.Regexp)
    AgreementCurrency *(regexp.Regexp)
    TerminationType *(regexp.Regexp)
    StartDate *(regexp.Regexp)
    EndDate *(regexp.Regexp)
    DeliveryType *(regexp.Regexp)
    MarginRatio *(regexp.Regexp)
    OrderQty *(regexp.Regexp)
    CashOrderQty *(regexp.Regexp)
    OrderPercent *(regexp.Regexp)
    RoundingDirection *(regexp.Regexp)
    RoundingModulus *(regexp.Regexp)
    QtyType *(regexp.Regexp)
    YieldType *(regexp.Regexp)
    Yield *(regexp.Regexp)
    YieldCalcDate *(regexp.Regexp)
    YieldRedemptionDate *(regexp.Regexp)
    YieldRedemptionPrice *(regexp.Regexp)
    YieldRedemptionPriceType *(regexp.Regexp)
    UnderlyingTradingSessionID *(regexp.Regexp)
    UnderlyingTradingSessionSubID *(regexp.Regexp)
    LastQty *(regexp.Regexp)
    LastPx *(regexp.Regexp)
    LastParPx *(regexp.Regexp)
    LastSpotRate *(regexp.Regexp)
    LastForwardPoints *(regexp.Regexp)
    LastMkt *(regexp.Regexp)
    TradeDate *(regexp.Regexp)
    ClearingBusinessDate *(regexp.Regexp)
    AvgPx *(regexp.Regexp)
    Spread *(regexp.Regexp)
    BenchmarkCurveCurrency *(regexp.Regexp)
    BenchmarkCurveName *(regexp.Regexp)
    BenchmarkCurvePoint *(regexp.Regexp)
    BenchmarkPrice *(regexp.Regexp)
    BenchmarkPriceType *(regexp.Regexp)
    BenchmarkSecurityID *(regexp.Regexp)
    BenchmarkSecurityIDSource *(regexp.Regexp)
    AvgPxIndicator *(regexp.Regexp)
    MultiLegReportingType *(regexp.Regexp)
    TradeLegRefID *(regexp.Regexp)
    TransactTime *(regexp.Regexp)
    SettlType *(regexp.Regexp)
    SettlDate *(regexp.Regexp)
    MatchStatus *(regexp.Regexp)
    MatchType *(regexp.Regexp)
    OrderCategory *(regexp.Regexp)
    CopyMsgIndicator *(regexp.Regexp)
    PublishTrdIndicator *(regexp.Regexp)
    ShortSaleReason *(regexp.Regexp)
    TrdRptStatus *(regexp.Regexp)
    AsOfIndicator *(regexp.Regexp)
    SettlSessID *(regexp.Regexp)
    SettlSessSubID *(regexp.Regexp)
    TierCode *(regexp.Regexp)
    MessageEventSource *(regexp.Regexp)
    LastUpdateTime *(regexp.Regexp)
    RndPx *(regexp.Regexp)
    TradeID *(regexp.Regexp)
    SecondaryTradeID *(regexp.Regexp)
    FirmTradeID *(regexp.Regexp)
    SecondaryFirmTradeID *(regexp.Regexp)
    CalculatedCcyLastQty *(regexp.Regexp)
    LastSwapPoints *(regexp.Regexp)
    UnderlyingSettlementDate *(regexp.Regexp)
    GrossTradeAmt *(regexp.Regexp)
    TradeHandlingInstr *(regexp.Regexp)
    OrigTradeHandlingInstr *(regexp.Regexp)
    OrigTradeDate *(regexp.Regexp)
    OrigTradeID *(regexp.Regexp)
    OrigSecondaryTradeID *(regexp.Regexp)
    TZTransactTime *(regexp.Regexp)
    ReportedPxDiff *(regexp.Regexp)
    SignatureLength *(regexp.Regexp)
    Signature *(regexp.Regexp)
    CheckSum *(regexp.Regexp)
    _controlBlock fixMessageControlBlock
}


var myTradeCaptureReport_RegexValidator tradeCaptureReport_RegexValidator

func init() {
    myTradeCaptureReport_RegexValidator
    myTradeCaptureReport_RegexValidator.BeginString = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.BodyLength = regexp.MustCompile(`\d+`)
    myTradeCaptureReport_RegexValidator.MsgType = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.SenderCompID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.TargetCompID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.OnBehalfOfCompID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.DeliverToCompID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.SecureDataLen = regexp.MustCompile(`\d+`)
    myTradeCaptureReport_RegexValidator.SecureData = regexp.MustCompile(`.*`)
    myTradeCaptureReport_RegexValidator.MsgSeqNum = regexp.MustCompile(`\d+`)
    myTradeCaptureReport_RegexValidator.SenderSubID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.SenderLocationID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.TargetSubID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.TargetLocationID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.OnBehalfOfSubID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.OnBehalfOfLocationID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.DeliverToSubID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.DeliverToLocationID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.PossDupFlag = regexp.MustCompile(`[YN]`)
    myTradeCaptureReport_RegexValidator.PossResend = regexp.MustCompile(`[YN]`)
    myTradeCaptureReport_RegexValidator.SendingTime = regexp.MustCompile(`\d{4}(0[1-9]|1[012])(0[1-9]|[12]\d|3[01])-([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](.\d{3})?`)
    myTradeCaptureReport_RegexValidator.OrigSendingTime = regexp.MustCompile(`\d{4}(0[1-9]|1[012])(0[1-9]|[12]\d|3[01])-([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](.\d{3})?`)
    myTradeCaptureReport_RegexValidator.XmlDataLen = regexp.MustCompile(`\d+`)
    myTradeCaptureReport_RegexValidator.XmlData = regexp.MustCompile(`.*`)
    myTradeCaptureReport_RegexValidator.MessageEncoding = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.LastMsgSeqNumProcessed = regexp.MustCompile(`\d+`)
    myTradeCaptureReport_RegexValidator.ApplVerID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.CstmApplVerID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.TradeReportID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.TradeReportTransType = regexp.MustCompile(`-?\d+`)
    myTradeCaptureReport_RegexValidator.TradeReportType = regexp.MustCompile(`-?\d+`)
    myTradeCaptureReport_RegexValidator.TradeRequestID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.TrdType = regexp.MustCompile(`-?\d+`)
    myTradeCaptureReport_RegexValidator.TrdSubType = regexp.MustCompile(`-?\d+`)
    myTradeCaptureReport_RegexValidator.SecondaryTrdType = regexp.MustCompile(`-?\d+`)
    myTradeCaptureReport_RegexValidator.TransferReason = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.ExecType = regexp.MustCompile(`[^|]`)
    myTradeCaptureReport_RegexValidator.TotNumTradeReports = regexp.MustCompile(`-?\d+`)
    myTradeCaptureReport_RegexValidator.LastRptRequested = regexp.MustCompile(`[YN]`)
    myTradeCaptureReport_RegexValidator.UnsolicitedIndicator = regexp.MustCompile(`[YN]`)
    myTradeCaptureReport_RegexValidator.SubscriptionRequestType = regexp.MustCompile(`[^|]`)
    myTradeCaptureReport_RegexValidator.TradeReportRefID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.SecondaryTradeReportRefID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.SecondaryTradeReportID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.TradeLinkID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.TrdMatchID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.ExecID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.OrdStatus = regexp.MustCompile(`[^|]`)
    myTradeCaptureReport_RegexValidator.SecondaryExecID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.ExecRestatementReason = regexp.MustCompile(`-?\d+`)
    myTradeCaptureReport_RegexValidator.PreviouslyReported = regexp.MustCompile(`[YN]`)
    myTradeCaptureReport_RegexValidator.PriceType = regexp.MustCompile(`-?\d+`)
    myTradeCaptureReport_RegexValidator.Symbol = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.SymbolSfx = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.SecurityID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.SecurityIDSource = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.Product = regexp.MustCompile(`-?\d+`)
    myTradeCaptureReport_RegexValidator.CFICode = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.SecurityType = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.SecuritySubType = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.MaturityMonthYear = regexp.MustCompile(`[0-9]{6}([0-9]{2}|w[0-9])?`)
    myTradeCaptureReport_RegexValidator.MaturityDate = regexp.MustCompile(`[0-9]{8}`)
    myTradeCaptureReport_RegexValidator.CouponPaymentDate = regexp.MustCompile(`[0-9]{8}`)
    myTradeCaptureReport_RegexValidator.IssueDate = regexp.MustCompile(`[0-9]{8}`)
    myTradeCaptureReport_RegexValidator.RepoCollateralSecurityType = regexp.MustCompile(`-?\d+`)
    myTradeCaptureReport_RegexValidator.RepurchaseTerm = regexp.MustCompile(`-?\d+`)
    myTradeCaptureReport_RegexValidator.RepurchaseRate = regexp.MustCompile(`-?\d*(\.\d*)?`)
    myTradeCaptureReport_RegexValidator.Factor = regexp.MustCompile(`-?\d*(\.\d*)?`)
    myTradeCaptureReport_RegexValidator.CreditRating = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.InstrRegistry = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.CountryOfIssue = regexp.MustCompile(`[A-Z]{2}`)
    myTradeCaptureReport_RegexValidator.StateOrProvinceOfIssue = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.LocaleOfIssue = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.RedemptionDate = regexp.MustCompile(`[0-9]{8}`)
    myTradeCaptureReport_RegexValidator.StrikePrice = regexp.MustCompile(``)
    myTradeCaptureReport_RegexValidator.StrikeCurrency = regexp.MustCompile(`[A-Z]{3}`)
    myTradeCaptureReport_RegexValidator.OptAttribute = regexp.MustCompile(`[^|]`)
    myTradeCaptureReport_RegexValidator.ContractMultiplier = regexp.MustCompile(`-?\d*(\.\d*)?`)
    myTradeCaptureReport_RegexValidator.CouponRate = regexp.MustCompile(`-?\d*(\.\d*)?`)
    myTradeCaptureReport_RegexValidator.SecurityExchange = regexp.MustCompile(`[A-Z0-9]{4}`)
    myTradeCaptureReport_RegexValidator.Issuer = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.EncodedIssuerLen = regexp.MustCompile(`\d+`)
    myTradeCaptureReport_RegexValidator.EncodedIssuer = regexp.MustCompile(`.*`)
    myTradeCaptureReport_RegexValidator.SecurityDesc = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.EncodedSecurityDescLen = regexp.MustCompile(`\d+`)
    myTradeCaptureReport_RegexValidator.EncodedSecurityDesc = regexp.MustCompile(`.*`)
    myTradeCaptureReport_RegexValidator.Pool = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.ContractSettlMonth = regexp.MustCompile(`[0-9]{6}([0-9]{2}|w[0-9])?`)
    myTradeCaptureReport_RegexValidator.CPProgram = regexp.MustCompile(`-?\d+`)
    myTradeCaptureReport_RegexValidator.CPRegType = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.DatedDate = regexp.MustCompile(`[0-9]{8}`)
    myTradeCaptureReport_RegexValidator.InterestAccrualDate = regexp.MustCompile(`[0-9]{8}`)
    myTradeCaptureReport_RegexValidator.SecurityStatus = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.SettleOnOpenFlag = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.InstrmtAssignmentMethod = regexp.MustCompile(`[^|]`)
    myTradeCaptureReport_RegexValidator.StrikeMultiplier = regexp.MustCompile(`-?\d*(\.\d*)?`)
    myTradeCaptureReport_RegexValidator.StrikeValue = regexp.MustCompile(`-?\d*(\.\d*)?`)
    myTradeCaptureReport_RegexValidator.MinPriceIncrement = regexp.MustCompile(`-?\d*(\.\d*)?`)
    myTradeCaptureReport_RegexValidator.PositionLimit = regexp.MustCompile(`-?\d+`)
    myTradeCaptureReport_RegexValidator.NTPositionLimit = regexp.MustCompile(`-?\d+`)
    myTradeCaptureReport_RegexValidator.UnitofMeasure = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.TimeUnit = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.MaturityTime = regexp.MustCompile(`\d{2}:\d{2}(:\d{2})?(Z|[\+-]\d{2}(:\d{2})?)`)
    myTradeCaptureReport_RegexValidator.AgreementDesc = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.AgreementID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.AgreementDate = regexp.MustCompile(`[0-9]{8}`)
    myTradeCaptureReport_RegexValidator.AgreementCurrency = regexp.MustCompile(`[A-Z]{3}`)
    myTradeCaptureReport_RegexValidator.TerminationType = regexp.MustCompile(`-?\d+`)
    myTradeCaptureReport_RegexValidator.StartDate = regexp.MustCompile(`[0-9]{8}`)
    myTradeCaptureReport_RegexValidator.EndDate = regexp.MustCompile(`[0-9]{8}`)
    myTradeCaptureReport_RegexValidator.DeliveryType = regexp.MustCompile(`-?\d+`)
    myTradeCaptureReport_RegexValidator.MarginRatio = regexp.MustCompile(`-?\d*(\.\d*)?`)
    myTradeCaptureReport_RegexValidator.OrderQty = regexp.MustCompile(`-?\d*(\.\d*)?`)
    myTradeCaptureReport_RegexValidator.CashOrderQty = regexp.MustCompile(`-?\d*(\.\d*)?`)
    myTradeCaptureReport_RegexValidator.OrderPercent = regexp.MustCompile(`-?\d*(\.\d*)?`)
    myTradeCaptureReport_RegexValidator.RoundingDirection = regexp.MustCompile(`[^|]`)
    myTradeCaptureReport_RegexValidator.RoundingModulus = regexp.MustCompile(`-?\d*(\.\d*)?`)
    myTradeCaptureReport_RegexValidator.QtyType = regexp.MustCompile(`-?\d+`)
    myTradeCaptureReport_RegexValidator.YieldType = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.Yield = regexp.MustCompile(`-?\d*(\.\d*)?`)
    myTradeCaptureReport_RegexValidator.YieldCalcDate = regexp.MustCompile(`[0-9]{8}`)
    myTradeCaptureReport_RegexValidator.YieldRedemptionDate = regexp.MustCompile(`[0-9]{8}`)
    myTradeCaptureReport_RegexValidator.YieldRedemptionPrice = regexp.MustCompile(``)
    myTradeCaptureReport_RegexValidator.YieldRedemptionPriceType = regexp.MustCompile(`-?\d+`)
    myTradeCaptureReport_RegexValidator.UnderlyingTradingSessionID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.UnderlyingTradingSessionSubID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.LastQty = regexp.MustCompile(`-?\d*(\.\d*)?`)
    myTradeCaptureReport_RegexValidator.LastPx = regexp.MustCompile(``)
    myTradeCaptureReport_RegexValidator.LastParPx = regexp.MustCompile(``)
    myTradeCaptureReport_RegexValidator.LastSpotRate = regexp.MustCompile(``)
    myTradeCaptureReport_RegexValidator.LastForwardPoints = regexp.MustCompile(`-?\d*(\.\d*)?`)
    myTradeCaptureReport_RegexValidator.LastMkt = regexp.MustCompile(`[A-Z0-9]{4}`)
    myTradeCaptureReport_RegexValidator.TradeDate = regexp.MustCompile(`[0-9]{8}`)
    myTradeCaptureReport_RegexValidator.ClearingBusinessDate = regexp.MustCompile(`[0-9]{8}`)
    myTradeCaptureReport_RegexValidator.AvgPx = regexp.MustCompile(``)
    myTradeCaptureReport_RegexValidator.Spread = regexp.MustCompile(`-?\d*(\.\d*)?`)
    myTradeCaptureReport_RegexValidator.BenchmarkCurveCurrency = regexp.MustCompile(`[A-Z]{3}`)
    myTradeCaptureReport_RegexValidator.BenchmarkCurveName = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.BenchmarkCurvePoint = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.BenchmarkPrice = regexp.MustCompile(``)
    myTradeCaptureReport_RegexValidator.BenchmarkPriceType = regexp.MustCompile(`-?\d+`)
    myTradeCaptureReport_RegexValidator.BenchmarkSecurityID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.BenchmarkSecurityIDSource = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.AvgPxIndicator = regexp.MustCompile(`-?\d+`)
    myTradeCaptureReport_RegexValidator.MultiLegReportingType = regexp.MustCompile(`[^|]`)
    myTradeCaptureReport_RegexValidator.TradeLegRefID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.TransactTime = regexp.MustCompile(`\d{4}(0[1-9]|1[012])(0[1-9]|[12]\d|3[01])-([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](.\d{3})?`)
    myTradeCaptureReport_RegexValidator.SettlType = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.SettlDate = regexp.MustCompile(`[0-9]{8}`)
    myTradeCaptureReport_RegexValidator.MatchStatus = regexp.MustCompile(`[^|]`)
    myTradeCaptureReport_RegexValidator.MatchType = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.OrderCategory = regexp.MustCompile(`[^|]`)
    myTradeCaptureReport_RegexValidator.CopyMsgIndicator = regexp.MustCompile(`[YN]`)
    myTradeCaptureReport_RegexValidator.PublishTrdIndicator = regexp.MustCompile(`[YN]`)
    myTradeCaptureReport_RegexValidator.ShortSaleReason = regexp.MustCompile(`-?\d+`)
    myTradeCaptureReport_RegexValidator.TrdRptStatus = regexp.MustCompile(`-?\d+`)
    myTradeCaptureReport_RegexValidator.AsOfIndicator = regexp.MustCompile(`[^|]`)
    myTradeCaptureReport_RegexValidator.SettlSessID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.SettlSessSubID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.TierCode = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.MessageEventSource = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.LastUpdateTime = regexp.MustCompile(`\d{4}(0[1-9]|1[012])(0[1-9]|[12]\d|3[01])-([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](.\d{3})?`)
    myTradeCaptureReport_RegexValidator.RndPx = regexp.MustCompile(``)
    myTradeCaptureReport_RegexValidator.TradeID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.SecondaryTradeID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.FirmTradeID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.SecondaryFirmTradeID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.CalculatedCcyLastQty = regexp.MustCompile(`-?\d*(\.\d*)?`)
    myTradeCaptureReport_RegexValidator.LastSwapPoints = regexp.MustCompile(`-?\d*(\.\d*)?`)
    myTradeCaptureReport_RegexValidator.UnderlyingSettlementDate = regexp.MustCompile(`[0-9]{8}`)
    myTradeCaptureReport_RegexValidator.GrossTradeAmt = regexp.MustCompile(`-?\d*(\.\d*)?`)
    myTradeCaptureReport_RegexValidator.TradeHandlingInstr = regexp.MustCompile(`[^|]`)
    myTradeCaptureReport_RegexValidator.OrigTradeHandlingInstr = regexp.MustCompile(`[^|]`)
    myTradeCaptureReport_RegexValidator.OrigTradeDate = regexp.MustCompile(`[0-9]{8}`)
    myTradeCaptureReport_RegexValidator.OrigTradeID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.OrigSecondaryTradeID = regexp.MustCompile(`[^|]*`)
    myTradeCaptureReport_RegexValidator.TZTransactTime = regexp.MustCompile(`\d{4}(0[1-9]|1[012])(0[1-9]|[12]\d|3[01])-\d{2}:\d{2}(:\d{2})?(Z|[\+-]\d{2}(:\d{2})?)`)
    myTradeCaptureReport_RegexValidator.ReportedPxDiff = regexp.MustCompile(`[YN]`)
    myTradeCaptureReport_RegexValidator.SignatureLength = regexp.MustCompile(`\d+`)
    myTradeCaptureReport_RegexValidator.Signature = regexp.MustCompile(`.*`)
    myTradeCaptureReport_RegexValidator.CheckSum = regexp.MustCompile(`[^|]*`)
}



func (m *TradeCaptureReport) HasRequiredFields() bool {
    valid := true
    
    

    
    
    valid = valid && m.BeginString.HasValue()
    
    
    
    valid = valid && m.BodyLength.HasValue()
    
    
    
    valid = valid && m.MsgType.HasValue()
    
    
    
    valid = valid && m.SenderCompID.HasValue()
    
    
    
    valid = valid && m.TargetCompID.HasValue()
    
    
    
    valid = valid && m.MsgSeqNum.HasValue()
    
    
    
    valid = valid && m.SendingTime.HasValue()
    
    
    
    for _, g := range(m.Hops) {
        valid = valid && g.HasRequiredFields()
    }
    
    
    
    for _, g := range(m.SecurityAltID) {
        valid = valid && g.HasRequiredFields()
    }
    
    
    
    for _, g := range(m.Events) {
        valid = valid && g.HasRequiredFields()
    }
    
    
    
    for _, g := range(m.InstrumentParties) {
        valid = valid && g.HasRequiredFields()
    }
    
    
    
    for _, g := range(m.Underlyings) {
        valid = valid && g.HasRequiredFields()
    }
    
    
    
    valid = valid && m.LastQty.HasValue()
    
    
    
    valid = valid && m.LastPx.HasValue()
    
    
    
    valid = valid && m.TradeDate.HasValue()
    
    
    
    for _, g := range(m.PosAmt) {
        valid = valid && g.HasRequiredFields()
    }
    
    
    
    for _, g := range(m.Legs) {
        valid = valid && g.HasRequiredFields()
    }
    
    
    
    for _, g := range(m.TrdRegTimestamps) {
        valid = valid && g.HasRequiredFields()
    }
    
    
    
    for _, g := range(m.Sides) {
        valid = valid && g.HasRequiredFields()
    }
    
    
    
    for _, g := range(m.RootPartyIDs) {
        valid = valid && g.HasRequiredFields()
    }
    
    
    
    valid = valid && m.CheckSum.HasValue()
    
    
    
    
    
    return valid
}




